apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --file=docker-compose.yml --out=./base
    kompose.service.port: "3000"
    kompose.service.type: LoadBalancer
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --file=docker-compose.yml --out=./base
        kompose.service.port: "3000"
        kompose.service.type: LoadBalancer
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/default: "true"
        io.kompose.network/todos-api-buffalo-dbnet: "true"
        io.kompose.network/todos-api-buffalo-internal: "true"
        io.kompose.service: web
    spec:
      containers:
        - command:
            - /bin/app
          env:
            - name: DATABASE_URL
              value: postgres://postgres:p0stgres@$(PGHOST)/app?sslmode=require
            - name: GO_ENV
              value: production
            - name: PORT
              value: "3000"
          image: ghcr.io/todos-api/buffalo:docker-image
          name: web
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: "1"
              memory: "268435456"
            requests:
              cpu: "1"
              memory: "268435456"
      restartPolicy: Always
status: {}
